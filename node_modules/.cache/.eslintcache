[{"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/index.js":"1","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/reportWebVitals.js":"2","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/App.js":"3","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/PreviousGames.js":"4","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/NavBar.js":"5","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/Selection.js":"6","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/AvatarMenu.js":"7","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/LoginForm.js":"8","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/SimpleModel.js":"9","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/Button.js":"10","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/index.js":"11","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/Game.js":"12","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/DataVisualization.js":"13","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/MoveHistory.js":"14","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/randomBot.js":"15","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/MiniMax.js":"16","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/TreeVisualization.js":"17","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/getBoardEvaluation.js":"18","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/GameRecap.js":"19","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/UndoMove.js":"20"},{"size":618,"mtime":1624485324494,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1624295825448,"results":"23","hashOfConfig":"22"},{"size":490,"mtime":1624496609046,"results":"24","hashOfConfig":"22"},{"size":817,"mtime":1624494967910,"results":"25","hashOfConfig":"22"},{"size":998,"mtime":1624485520413,"results":"26","hashOfConfig":"22"},{"size":2261,"mtime":1624295825446,"results":"27","hashOfConfig":"22"},{"size":1833,"mtime":1624836193373,"results":"28","hashOfConfig":"22"},{"size":3270,"mtime":1624836418805,"results":"29","hashOfConfig":"22"},{"size":1006,"mtime":1624295825447,"results":"30","hashOfConfig":"22"},{"size":247,"mtime":1624295825446,"results":"31","hashOfConfig":"22"},{"size":42,"mtime":1624295825447,"results":"32","hashOfConfig":"22"},{"size":5503,"mtime":1624833012965,"results":"33","hashOfConfig":"22"},{"size":1826,"mtime":1624498835479,"results":"34","hashOfConfig":"22"},{"size":770,"mtime":1624495067571,"results":"35","hashOfConfig":"22"},{"size":724,"mtime":1624494516752,"results":"36","hashOfConfig":"22"},{"size":4480,"mtime":1624494495895,"results":"37","hashOfConfig":"22"},{"size":516,"mtime":1624295825447,"results":"38","hashOfConfig":"22"},{"size":943,"mtime":1624295825445,"results":"39","hashOfConfig":"22"},{"size":795,"mtime":1624490221319,"results":"40","hashOfConfig":"22"},{"size":391,"mtime":1624499025560,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hugavf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/index.js",[],["88","89"],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/reportWebVitals.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/App.js",["90"],"import React from 'react'\nimport { Game } from './components/pages/Game';\nimport PreviousGames from './components/pages/PreviousGames/PreviousGames'\nimport {\n  Route,\n  useHistory,\n  Switch,\n} from 'react-router-dom';\nfunction App() {\n\n\n\n  return (\n    <>\n      <div className=\"app-container\">\n        <Switch>\n          <Route exact path=\"/\" component={Game} />\n          <Route path=\"/games\" component={PreviousGames} />\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/PreviousGames.js",["91"],"import React from 'react'\nimport NavBar from '../../common/NavBar'\nimport GameReacap from './GameRecap'\nconst PreviousGames = () => {\n    const getHistory = () => {\n        // get history from backend\n    }\n\n    const moveHistory = [{ computerMove: \"Nc6\", playerMove: \"f3\" }, { computerMove: \"Rb8\", playerMove: \"e4\" }, { computerMove: \"Ra8\", playerMove: \"Bc4\" }, { computerMove: \"Rb8\", playerMove: \"d4\" }, { computerMove: \"Ne5\", playerMove: \"d5\" }, { computerMove: \"Nxc4\", playerMove: \"Qd4\" }]\n    return (\n\n        <>\n            <NavBar className=\"nav-full\" />\n            <div className=\"prev-games\">\n                <h2>Previous Games</h2>\n                <GameReacap result={\"Win\"} botType={\"MiniMax\"} depth={\"3\"} moveHistory={moveHistory} />\n            </div>\n        </>\n    )\n}\n\nexport default PreviousGames\n","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/NavBar.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/Selection.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/AvatarMenu.js",["92"],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/LoginForm.js",["93"],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/SimpleModel.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/common/Button.js",["94"],"import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Button = ({ onClick, text }) => {\n    return (\n        <button className=\"btn dark\" onClick={onClick}>\n            {text}\n        </button>\n\n    )\n}\n\nexport default Button\n","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/index.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/Game.js",["95"],"import React, { useState, useEffect, useRef } from 'react'\nimport Chessboard from 'chessboardjsx';\nimport Chess from \"chess.js\";\nimport MoveHistory from './MoveHistory';\nimport DataVisualization from './DataVisualization';\nimport NavBar from '../../common/NavBar';\nimport randomBot from '../../Bots/randomBot';\nimport MiniMax from '../../Bots/MiniMax';\nimport SimpleModal from '../../common/SimpleModel';\nimport UndoMove from './UndoMove';\n\nconst startingFen = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\nconst allBots = [\"Random\", \"MiniMax\", \"AlphaBeta\", \"Stockfish\"]\nconst allStartingPositions = [\n    { name: \"Start\", fen: startingFen },\n    { name: \"Caro-Kann Defense\", fen: \"rnbqkbnr/pp1ppppp/2p5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 1\" },\n    { name: \"Pirc Defense\", fen: \"rnbqkbnr/ppp1pppp/3p4/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 1\" },\n    { name: \"Sicilian Defense\", fen: \"rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq c6 0 1\" },\n    { name: \"French Defense\", fen: \"rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 1\" },\n]\nconst allDepth = [1, 2, 3]\nfunction Game() {\n    const [chess] = useState(new Chess(startingFen));\n    const [fen, setFen] = useState(chess.fen());\n    const [movesHistory, setMovesHistory] = useState([]);\n    const [selectedBot, setSelectedBot] = useState(allBots[1]);\n    const [selectedPos, setSelectedPos] = useState(allStartingPositions[0].fen)\n    const [evalCount, setEvalCount] = useState(0)\n    const [gameOverText, setGameOverText] = useState('');\n    const [randomBotAvaliableMoves, setRandomBotAvaliableMoves] = useState([]);\n    const [treeData, setTreeData] = useState({})\n    const [boardSize, setBoardSize] = useState(460);\n    const [openModal, setOpenModal] = useState(false)\n    const [depth, setDepth] = useState(allDepth[1])\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const width = ref.current.offsetWidth;\n        if (width < 800) {\n            setBoardSize(width - 200);\n        }\n        else if (width < 1200) {\n            setBoardSize(width - 550)\n        }\n    }, [])\n\n    useEffect(() => {\n        resetGame()\n    }, [selectedPos])\n\n    useEffect(() => {\n        // Check for win\n        if (chess.game_over()) {\n            handleGameOver();\n        }\n    })\n\n\n    const updateHistory = () => {\n        console.log(chess.history())\n        setMovesHistory(chess.history());\n    }\n\n    const undo = () => {\n        chess.undo()\n        chess.undo()\n        setFen(chess.fen);\n        updateHistory();\n    }\n\n    // Handles player move and calls bots move\n    const handlePlayerMove = (playerMove) => {\n        // Checks if playermove is valid\n        if (chess.move(playerMove)) {\n            // update chessboard\n            setFen(chess.fen());\n\n            // computer response random\n            if (selectedBot === allBots[0]) {\n                randomBot(chess, updateHistory, setRandomBotAvaliableMoves, setFen)\n            }\n            else if (selectedBot === allBots[1]) {\n                MiniMax(chess, updateHistory, setFen, setEvalCount, setTreeData, depth)\n            }\n        }\n    }\n\n    const resetGame = () => {\n        // reset board and game\n        setFen(selectedPos);\n        chess.load(selectedPos);\n        setMovesHistory([]);\n        setOpenModal(false)\n    }\n\n    const handleGameOver = () => {\n        // Check how game ended\n        if (chess.in_checkmate()) {\n            setGameOverText(\"Checkmate\")\n        }\n        if (chess.in_draw()) {\n            setGameOverText(\"Draw\")\n        }\n        if (chess.in_stalemate()) {\n            setGameOverText(\"Stalemate\")\n        }\n        if (chess.in_threefold_repetition()) {\n            setGameOverText(\"Threefold Repetition\")\n        }\n        if (chess.insufficient_material()) {\n            setGameOverText(\"Insufficient Material\")\n        }\n\n        // Open game over modal\n        setOpenModal(true)\n\n    }\n\n\n    return (\n        <>\n            <NavBar\n                selectedBot={selectedBot}\n                setSelectedBot={setSelectedBot}\n                allBots={allBots}\n                selectedPos={selectedPos}\n                setSelectedPos={setSelectedPos}\n                allStartingPositions={allStartingPositions}\n                depth={depth}\n                setDepth={setDepth}\n                allDepth={allDepth}\n            />\n            <div className=\"app-container\">\n                <SimpleModal openModal={openModal} setOpenModal={setOpenModal} title={\"Game Over\"} desc={`The game ended with a ${gameOverText}`} onClick={resetGame} buttonText=\"Play Again?\" />\n                <div className=\"chess-container\" ref={ref}>\n                    <Chessboard\n                        width={boardSize}\n                        position={fen}\n                        onDrop={(move) => handlePlayerMove({\n                            from: move.sourceSquare,\n                            to: move.targetSquare,\n                            promotion: \"q\",\n                        })}\n                        className={\"test\"}\n                    />\n                </div>\n                <div className=\"utility-container\">\n                    <MoveHistory movesHistory={movesHistory} />\n                    <UndoMove undo={undo} />\n                    <DataVisualization selectedBot={selectedBot} randomBotAvaliableMoves={randomBotAvaliableMoves} allBots={allBots} evalCount={evalCount} treeData={treeData} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Game;\n","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/DataVisualization.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/MoveHistory.js",["96"],"import React from 'react';\n\nconst MoveHistory = props => {\n    const { movesHistory } = props;\n\n    let line = 0;\n    const listMoveHistory = () => {\n        return movesHistory.map((move, index, arr) => {\n            if (index % 2 === 0) {\n                line++;\n                return <li key={index} className={`node`}>\n                    {line}.\n                    <div className=\"playerNode\">{move}</div>\n                    <div className=\"playerNode\">{arr[index + 1]}</div>\n                </li>\n            }\n        })\n    }\n\n    return (\n        <div className=\"move-history\">\n            <h2>Move History</h2>\n            <ul className=\"move-list\">\n                {listMoveHistory()}\n            </ul>\n        </div>\n    )\n}\n\n\nexport default MoveHistory;\n","/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/randomBot.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/MiniMax.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/TreeVisualization.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/Bots/getBoardEvaluation.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/GameRecap.js",[],"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai-fe/src/components/pages/Game/UndoMove.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":3,"nodeType":"103","messageId":"104","endLine":6,"endColumn":13},{"ruleId":"101","severity":1,"message":"105","line":5,"column":11,"nodeType":"103","messageId":"104","endLine":5,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"107","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":49,"column":8,"nodeType":"111","endLine":49,"endColumn":21,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":52,"nodeType":"115","messageId":"116","endLine":8,"endColumn":54},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'getHistory' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetGame'. Either include it or remove the dependency array.","ArrayExpression",["119"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [resetGame, selectedPos]",{"range":"122","text":"123"},[2130,2143],"[resetGame, selectedPos]"]