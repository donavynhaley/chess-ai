[{"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/index.js":"1","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/reportWebVitals.js":"2","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/App.js":"3","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/PreviousGames.js":"4","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/index.js":"5","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/GameRecap.js":"6","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/NavBar.js":"7","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/Game.js":"8","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/Selection.js":"9","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/AvatarMenu.js":"10","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/SimpleModel.js":"11","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/MoveHistory.js":"12","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/DataVisualization.js":"13","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/UndoMove.js":"14","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/randomBot.js":"15","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/MiniMax.js":"16","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/LoginForm.js":"17","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/Button.js":"18","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/TreeVisualization.js":"19","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/getBoardEvaluation.js":"20"},{"size":618,"mtime":1624251789722,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1624251090279,"results":"23","hashOfConfig":"22"},{"size":659,"mtime":1624861424054,"results":"24","hashOfConfig":"22"},{"size":900,"mtime":1624861424054,"results":"25","hashOfConfig":"22"},{"size":42,"mtime":1624251090279,"results":"26","hashOfConfig":"22"},{"size":795,"mtime":1624861424054,"results":"27","hashOfConfig":"22"},{"size":1094,"mtime":1624861424054,"results":"28","hashOfConfig":"22"},{"size":6895,"mtime":1625175716606,"results":"29","hashOfConfig":"22"},{"size":2261,"mtime":1624251090279,"results":"30","hashOfConfig":"22"},{"size":2321,"mtime":1625176048442,"results":"31","hashOfConfig":"22"},{"size":1006,"mtime":1624262519556,"results":"32","hashOfConfig":"22"},{"size":770,"mtime":1624861424054,"results":"33","hashOfConfig":"22"},{"size":1826,"mtime":1624861424054,"results":"34","hashOfConfig":"22"},{"size":391,"mtime":1624861424054,"results":"35","hashOfConfig":"22"},{"size":724,"mtime":1624861424054,"results":"36","hashOfConfig":"22"},{"size":4708,"mtime":1624863636712,"results":"37","hashOfConfig":"22"},{"size":3383,"mtime":1625175843604,"results":"38","hashOfConfig":"22"},{"size":247,"mtime":1624251090279,"results":"39","hashOfConfig":"22"},{"size":516,"mtime":1624261473661,"results":"40","hashOfConfig":"22"},{"size":943,"mtime":1624251090279,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"nfbioj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/index.js",[],["88","89"],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/reportWebVitals.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/App.js",["90"],"import React, { useState } from 'react'\nimport { Game } from './components/pages/Game';\nimport PreviousGames from './components/pages/PreviousGames/PreviousGames'\nimport {\n  Route,\n  useHistory,\n  Switch,\n} from 'react-router-dom';\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  return (\n    <>\n      <div className=\"app-container\">\n        <Switch>\n          <Route exact path=\"/\" ><Game isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} /></Route>\n          <Route path=\"/games\" ><PreviousGames isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} /></Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/PreviousGames.js",["91"],"import React from 'react'\nimport NavBar from '../../common/NavBar'\nimport GameReacap from './GameRecap'\nconst PreviousGames = ({ isLoggedIn, setIsLoggedIn }) => {\n    const getHistory = () => {\n        // get history from backend\n    }\n\n    const moveHistory = [{ computerMove: \"Nc6\", playerMove: \"f3\" }, { computerMove: \"Rb8\", playerMove: \"e4\" }, { computerMove: \"Ra8\", playerMove: \"Bc4\" }, { computerMove: \"Rb8\", playerMove: \"d4\" }, { computerMove: \"Ne5\", playerMove: \"d5\" }, { computerMove: \"Nxc4\", playerMove: \"Qd4\" }]\n    return (\n\n        <>\n            <NavBar className=\"nav-full\" isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n            <div className=\"prev-games\">\n                <h2>Previous Games</h2>\n                <GameReacap result={\"Win\"} botType={\"MiniMax\"} depth={\"3\"} moveHistory={moveHistory} />\n            </div>\n        </>\n    )\n}\n\nexport default PreviousGames\n","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/index.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/PreviousGames/GameRecap.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/NavBar.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/Game.js",["92","93","94"],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/Selection.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/AvatarMenu.js",["95"],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/SimpleModel.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/MoveHistory.js",["96"],"import React from 'react';\n\nconst MoveHistory = props => {\n    const { movesHistory } = props;\n\n    let line = 0;\n    const listMoveHistory = () => {\n        return movesHistory.map((move, index, arr) => {\n            if (index % 2 === 0) {\n                line++;\n                return <li key={index} className={`node`}>\n                    {line}.\n                    <div className=\"playerNode\">{move}</div>\n                    <div className=\"playerNode\">{arr[index + 1]}</div>\n                </li>\n            }\n        })\n    }\n\n    return (\n        <div className=\"move-history\">\n            <h2>Move History</h2>\n            <ul className=\"move-list\">\n                {listMoveHistory()}\n            </ul>\n        </div>\n    )\n}\n\n\nexport default MoveHistory;\n","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/DataVisualization.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/UndoMove.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/randomBot.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/MiniMax.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/LoginForm.js",["97"],"import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string()\n        .required('No password provided.')\n        .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Password must contain at least one uppercase letter, one lowercase letter, one number and one special character')\n});\n\nconst initialFormValues = {\n    email: \"\",\n    password: \"\",\n}\n\nconst LoginForm = ({ isLogin, setOpenModal, setIsLoggedIn }) => {\n\n    /* API Calls */\n    const backend = axios.create({\n        baseURL: process.env.REACT_APP_BE_URL\n    })\n\n    const register = userCredentials => {\n        const promise = backend.post(\n            `register`,\n            userCredentials,\n        );\n\n        promise\n            .then(res => {\n                console.log(res.data)\n                resetForm(userCredentials)\n                setOpenModal(false)\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    const login = userCredentials => {\n        const promise = backend.post(\n            `login`,\n            userCredentials,\n        );\n\n        promise\n            .then(res => {\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('email', res.data.email)\n                console.log(res.data)\n                setIsLoggedIn(true)\n                resetForm(userCredentials)\n                setOpenModal(false)\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    /* Form Logic */\n    const postLogin = (values) => {\n        isLogin === \"Login\" ? login(values) : register(values)\n    }\n\n    const resetForm = (values) => {\n        Object.keys(values).forEach(key => (values[key] = \"\"));  //<- Reseting all fields using blank space\n    }\n\n    return (\n        <Formik\n            initialValues={initialFormValues}\n            validationSchema={LoginSchema}\n            onSubmit={values => {\n                postLogin(values)\n            }}\n        >\n            {({ errors, touched }) => (\n                <Form className=\"form\">\n                    <div className=\"form-group\">\n                        <Field name=\"email\" type=\"email\" className={`input ${errors.email && touched.namemaile ? \"input-error\" : \"\"}`} placeholder=\"Email\" />\n                        {errors.email && touched.email ? <div className=\"error\">{errors.email}</div> : null}\n                    </div>\n                    <div className=\"form-group\">\n                        <Field name=\"password\"\n                            type=\"password\" className={`input ${errors.password && touched.password ? \"input-error\" : \"\"}`} placeholder=\"Password\" id=\"password-input\" />\n                        {errors.password && touched.password ? (\n                            <div className=\"error\">{errors.password}</div>\n                        ) : null}\n                    </div>\n                    <Button type=\"submit\" variant=\"outlined\" color=\"secondary\">\n                        Submit\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm\n","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/common/Button.js",["98"],"import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Button = ({ onClick, text }) => {\n    return (\n        <button className=\"btn dark\" onClick={onClick}>\n            {text}\n        </button>\n\n    )\n}\n\nexport default Button\n","/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/pages/Game/TreeVisualization.js",[],"/home/donavynh/Documents/Github/chess-ai/chess-ai-fe/src/components/Bots/getBoardEvaluation.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":5,"column":11,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":50,"column":8,"nodeType":"110","endLine":50,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":54,"column":8,"nodeType":"110","endLine":54,"endColumn":21,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":62,"column":8,"nodeType":"110","endLine":62,"endColumn":22,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":8,"column":52,"nodeType":"119","messageId":"120","endLine":8,"endColumn":54},{"ruleId":"103","severity":1,"message":"121","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"122","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'getHistory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsLoggedIn'. Either include it or remove the dependency array. If 'setIsLoggedIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'resetGame'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'chess' and 'handleGameOver'. Either include them or remove the dependency array.",["127"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'styled' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [setIsLoggedIn]",{"range":"134","text":"135"},"Update the dependencies array to be: [resetGame, selectedPos]",{"range":"136","text":"137"},"Update the dependencies array to be: [chess, handleGameOver, movesHistory]",{"range":"138","text":"139"},[2253,2255],"[setIsLoggedIn]",[2307,2320],"[resetGame, selectedPos]",[2479,2493],"[chess, handleGameOver, movesHistory]"]