{"ast":null,"code":"import _slicedToArray from\"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{button:{display:'block',marginTop:theme.spacing(2),color:'white'},formControl:{margin:theme.spacing(1),minWidth:120},select:{color:'white',minWidth:120}};});var Selection=function Selection(props){var selected=props.selected,setSelected=props.setSelected,allOptions=props.allOptions,title=props.title;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var classes=useStyles();var handleChange=function handleChange(event){setSelected(event.target.value);};var handleClose=function handleClose(){setOpen(false);};var handleOpen=function handleOpen(){setOpen(true);};return/*#__PURE__*/_jsx(\"div\",{className:\"select-bot-container\",children:/*#__PURE__*/_jsx(FormControl,{className:classes.formControl,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.select,id:\"select-label\",children:title}),/*#__PURE__*/_jsx(Select,{labelId:\"select-label\",id:\"open-select\",open:open,onClose:handleClose,onOpen:handleOpen,value:selected,onChange:handleChange,className:classes.select,children:allOptions&&allOptions.map(function(option,key){if(typeof option==\"string\"||typeof option==\"number\"){return/*#__PURE__*/_jsx(MenuItem,{value:option,children:option},key);}else{return/*#__PURE__*/_jsx(MenuItem,{value:option.fen,children:option.name},key);}})})]})})});};export default Selection;","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/common/Selection.js"],"names":["React","useState","makeStyles","InputLabel","MenuItem","FormControl","Select","useStyles","theme","button","display","marginTop","spacing","color","formControl","margin","minWidth","select","Selection","props","selected","setSelected","allOptions","title","open","setOpen","classes","handleChange","event","target","value","handleClose","handleOpen","map","option","key","fen","name"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,wFAGA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAACM,KAAD,QAAY,CACrCC,MAAM,CAAE,CACJC,OAAO,CAAE,OADL,CAEJC,SAAS,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFP,CAGJC,KAAK,CAAE,OAHH,CAD6B,CAMrCC,WAAW,CAAE,CACTC,MAAM,CAAEP,KAAK,CAACI,OAAN,CAAc,CAAd,CADC,CAETI,QAAQ,CAAE,GAFD,CANwB,CAUrCC,MAAM,CAAE,CACJJ,KAAK,CAAE,OADH,CAEJG,QAAQ,CAAE,GAFN,CAV6B,CAAZ,EAAD,CAA5B,CAgBA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,GAAQC,CAAAA,QAAR,CAAqDD,KAArD,CAAQC,QAAR,CAAkBC,WAAlB,CAAqDF,KAArD,CAAkBE,WAAlB,CAA+BC,UAA/B,CAAqDH,KAArD,CAA+BG,UAA/B,CAA2CC,KAA3C,CAAqDJ,KAArD,CAA2CI,KAA3C,CACA,cAAwBtB,QAAQ,CAAC,KAAD,CAAhC,wCAAOuB,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,OAAO,CAAGnB,SAAS,EAAzB,CAEA,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BP,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACH,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBN,OAAO,CAAC,KAAD,CAAP,CACH,CAFD,CAIA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBP,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,CAIA,mBACI,YAAK,SAAS,CAAC,sBAAf,uBAEI,KAAC,WAAD,EAAa,SAAS,CAAEC,OAAO,CAACZ,WAAhC,uBACI,oCACI,KAAC,UAAD,EAAY,SAAS,CAAEY,OAAO,CAACT,MAA/B,CAAuC,EAAE,CAAC,cAA1C,UAA0DM,KAA1D,EADJ,cAEI,KAAC,MAAD,EACI,OAAO,CAAC,cADZ,CAEI,EAAE,CAAC,aAFP,CAGI,IAAI,CAAEC,IAHV,CAII,OAAO,CAAEO,WAJb,CAKI,MAAM,CAAEC,UALZ,CAMI,KAAK,CAAEZ,QANX,CAOI,QAAQ,CAAEO,YAPd,CAQI,SAAS,CAAED,OAAO,CAACT,MARvB,UAUKK,UAAU,EAAIA,UAAU,CAACW,GAAX,CAAe,SAACC,MAAD,CAASC,GAAT,CAAiB,CAC3C,GAAI,MAAQD,CAAAA,MAAR,EAAmB,QAAnB,EAA+B,MAAQA,CAAAA,MAAR,EAAmB,QAAtD,CAAgE,CAC5D,mBAAO,KAAC,QAAD,EAAoB,KAAK,CAAEA,MAA3B,UAAoCA,MAApC,EAAeC,GAAf,CAAP,CAEH,CAHD,IAIK,CACD,mBAAO,KAAC,QAAD,EAAoB,KAAK,CAAED,MAAM,CAACE,GAAlC,UAAwCF,MAAM,CAACG,IAA/C,EAAeF,GAAf,CAAP,CACH,CACJ,CARc,CAVnB,EAFJ,GADJ,EAFJ,EADJ,CA8BH,CA/CD,CAiDA,cAAejB,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n        color: 'white',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    select: {\n        color: 'white',\n        minWidth: 120,\n    }\n}));\n\nconst Selection = (props) => {\n    const { selected, setSelected, allOptions, title } = props;\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n\n    const handleChange = (event) => {\n        setSelected(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div className=\"select-bot-container\">\n\n            <FormControl className={classes.formControl}>\n                <div>\n                    <InputLabel className={classes.select} id=\"select-label\">{title}</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={selected}\n                        onChange={handleChange}\n                        className={classes.select}\n                    >\n                        {allOptions && allOptions.map((option, key) => {\n                            if (typeof (option) == \"string\" || typeof (option) == \"number\") {\n                                return <MenuItem key={key} value={option}>{option}</MenuItem>\n\n                            }\n                            else {\n                                return <MenuItem key={key} value={option.fen}>{option.name}</MenuItem>\n                            }\n                        })}\n                    </Select>\n                </div>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default Selection\n"]},"metadata":{},"sourceType":"module"}