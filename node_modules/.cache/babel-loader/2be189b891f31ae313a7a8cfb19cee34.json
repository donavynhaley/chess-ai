{"ast":null,"code":"var _jsxFileName = \"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/common/SelectBot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n    color: 'white'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    color: withTheme\n  }\n}));\n\nconst SelectBot = props => {\n  _s();\n\n  //const { selectedBot, setSelectedBot } = props;\n  const [selectedBot, setSelectedBot] = useState();\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSelectedBot(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-bot-container\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      onClick: handleOpen,\n      children: \"Select a bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-controlled-open-select-label\",\n          children: \"Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-controlled-open-select-label\",\n          id: \"demo-controlled-open-select\",\n          open: open,\n          onClose: handleClose,\n          onOpen: handleOpen,\n          value: selectedBot,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 0,\n            children: \"Ten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 1,\n            children: \"Twenty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 2,\n            children: \"Thirty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectBot, \"qgUczjnbs1VR/LXWty/t3KaHcEI=\", false, function () {\n  return [useStyles];\n});\n\n_c = SelectBot;\nexport default SelectBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectBot\");","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/common/SelectBot.js"],"names":["React","useState","makeStyles","withTheme","InputLabel","MenuItem","FormControl","Select","Button","useStyles","theme","button","display","marginTop","spacing","color","formControl","margin","minWidth","SelectBot","props","selectedBot","setSelectedBot","open","setOpen","classes","handleChange","event","target","value","handleClose","handleOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFP;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAD6B;AAMrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEP,KAAK,CAACI,OAAN,CAAc,CAAd,CADC;AAETI,IAAAA,QAAQ,EAAE,GAFD;AAGTH,IAAAA,KAAK,EAAEZ;AAHE;AANwB,CAAZ,CAAD,CAA5B;;AAaA,MAAMgB,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,EAA9C;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMwB,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC5BL,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMO,UAAU,GAAG,MAAM;AACrBP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEC,OAAO,CAACd,MAA3B;AAAmC,MAAA,OAAO,EAAEoB,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEN,OAAO,CAACT,WAAhC;AAAA,6BACI;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,mCADZ;AAEI,UAAA,EAAE,EAAC,6BAFP;AAGI,UAAA,IAAI,EAAEO,IAHV;AAII,UAAA,OAAO,EAAEO,WAJb;AAKI,UAAA,MAAM,EAAEC,UALZ;AAMI,UAAA,KAAK,EAAEV,WANX;AAOI,UAAA,QAAQ,EAAEK,YAPd;AAAA,kCASI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA3CD;;GAAMP,S;UAIcV,S;;;KAJdU,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n        color: 'white',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        color: withTheme,\n    },\n}));\n\nconst SelectBot = (props) => {\n    //const { selectedBot, setSelectedBot } = props;\n    const [selectedBot, setSelectedBot] = useState();\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n\n    const handleChange = (event) => {\n        setSelectedBot(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div className=\"select-bot-container\">\n            <Button className={classes.button} onClick={handleOpen}>\n                Select a bot\n      </Button>\n            <FormControl className={classes.formControl}>\n                <div>\n                    <InputLabel id=\"demo-controlled-open-select-label\">Bot</InputLabel>\n                    <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={selectedBot}\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={0}>Ten</MenuItem>\n                        <MenuItem value={1}>Twenty</MenuItem>\n                        <MenuItem value={2}>Thirty</MenuItem>\n                    </Select>\n                </div>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default SelectBot\n"]},"metadata":{},"sourceType":"module"}