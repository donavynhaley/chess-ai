{"ast":null,"code":"/* \nbased on stockfish midgame piece evaluations\nPawnValueMg = 128, \nKnightValueMg = 781,\nBishopValueMg = 825, \nRookValueMg = 1276, \nQueenValueMg = 2538,\n*/\nlet pieceValues = new Map(); // Black\n\npieceValues['p'] = 128;\npieceValues['n'] = 781;\npieceValues['b'] = 128;\npieceValues['r'] = 1276;\npieceValues['q'] = 2538;\npieceValues['k'] = 9999; // White\n\npieceValues['P'] = -128;\npieceValues['N'] = -781;\npieceValues['B'] = -128;\npieceValues['R'] = -1276;\npieceValues['Q'] = -2538;\npieceValues['K'] = -9999; // returns total piece values\n\nconst getBoardEvaluation = fen => {\n  fen = \"nqbrkbrn/pppppppp/8/8/8/5P2/PPPPP1PP/NQBRKBRN b - - 0 1\";\n  let count = 0;\n\n  for (let i = 0; i < fen.length; i++) {\n    if (pieceValues[fen.charAt(i)] !== undefined) count += pieceValues[fen.charAt(i)];\n  }\n\n  return count;\n};\n\nexport default getBoardEvaluation;\n/* for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            if (board[i][j] === null)\n                continue\n            let piece = board[i][j].type\n            let color = board[i][j].color\n            if (color === 'b') {\n                count += pieceValues[piece]\n            }\n            else {\n                count -= pieceValues[piece]\n            }\n        }\n    }*/","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/bots/getBoardEvaluation.js"],"names":["pieceValues","Map","getBoardEvaluation","fen","count","i","length","charAt","undefined"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,WAAW,GAAG,IAAIC,GAAJ,EAAlB,C,CACA;;AACAD,WAAW,CAAC,GAAD,CAAX,GAAmB,GAAnB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,GAAnB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,GAAnB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,IAAnB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,IAAnB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,IAAnB,C,CAEA;;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,GAApB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,GAApB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,GAApB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,IAApB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,IAApB;AACAA,WAAW,CAAC,GAAD,CAAX,GAAmB,CAAC,IAApB,C,CAEA;;AACA,MAAME,kBAAkB,GAAIC,GAAD,IAAS;AAChCA,EAAAA,GAAG,GAAG,yDAAN;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAIL,WAAW,CAACG,GAAG,CAACI,MAAJ,CAAWF,CAAX,CAAD,CAAX,KAA+BG,SAAnC,EACIJ,KAAK,IAAIJ,WAAW,CAACG,GAAG,CAACI,MAAJ,CAAWF,CAAX,CAAD,CAApB;AACP;;AAED,SAAOD,KAAP;AACH,CATD;;AAWA,eAAeF,kBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n/* \nbased on stockfish midgame piece evaluations\nPawnValueMg = 128, \nKnightValueMg = 781,\nBishopValueMg = 825, \nRookValueMg = 1276, \nQueenValueMg = 2538,\n*/\n\nlet pieceValues = new Map()\n// Black\npieceValues['p'] = 128;\npieceValues['n'] = 781;\npieceValues['b'] = 128;\npieceValues['r'] = 1276;\npieceValues['q'] = 2538;\npieceValues['k'] = 9999;\n\n// White\npieceValues['P'] = -128;\npieceValues['N'] = -781;\npieceValues['B'] = -128;\npieceValues['R'] = -1276;\npieceValues['Q'] = -2538;\npieceValues['K'] = -9999;\n\n// returns total piece values\nconst getBoardEvaluation = (fen) => {\n    fen = \"nqbrkbrn/pppppppp/8/8/8/5P2/PPPPP1PP/NQBRKBRN b - - 0 1\"\n    let count = 0;\n    for (let i = 0; i < fen.length; i++) {\n        if (pieceValues[fen.charAt(i)] !== undefined)\n            count += pieceValues[fen.charAt(i)]\n    }\n\n    return count\n}\n\nexport default getBoardEvaluation\n\n/* for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            if (board[i][j] === null)\n                continue\n            let piece = board[i][j].type\n            let color = board[i][j].color\n            if (color === 'b') {\n                count += pieceValues[piece]\n            }\n            else {\n                count -= pieceValues[piece]\n            }\n        }\n    }*/"]},"metadata":{},"sourceType":"module"}