{"ast":null,"code":"import Chess from \"chess.js\";\n/* \n    - Create copy of chess board\n    - get moves\n    - go through each move and get its evaluation\n    - run minmax evaulating each move to a height of 3\n*/\n\nconst MiniMax = (chess, updateComputerHistory, setRandomBotAvaliableMoves, setFen) => {\n  const chessCopy = new Chess(chess.fen()); // computer response random\n\n  setTimeout(() => {\n    // Get list of valid moves\n    const moves = chessCopy.moves();\n    getBoardEvaluation(chessCopy.board()); // update state for data vizualization\n    // setRandomBotAvaliableMoves(moves);\n    // // If valid move is avaliable selects random and updates chessboard\n    // if (moves.length > 0) {\n    //     const computerMove = moves[Math.floor(Math.random() * moves.length)];\n    //     chess.move(computerMove);\n    //     // add move to history\n    //     updateComputerHistory(computerMove);\n    //     // update chessboard\n    //     setFen(chess.fen());\n    // }\n  }, 300);\n};\n\n_c = MiniMax;\n\nconst getBoardEvaluation = board => {\n  let count = 0;\n\n  for (const arr in board) {\n    console.log(arr);\n  }\n};\n\nexport default MiniMax;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniMax\");","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/bots/MiniMax.js"],"names":["Chess","MiniMax","chess","updateComputerHistory","setRandomBotAvaliableMoves","setFen","chessCopy","fen","setTimeout","moves","getBoardEvaluation","board","count","arr","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,qBAAR,EAA+BC,0BAA/B,EAA2DC,MAA3D,KAAsE;AAClF,QAAMC,SAAS,GAAG,IAAIN,KAAJ,CAAUE,KAAK,CAACK,GAAN,EAAV,CAAlB,CADkF,CAGlF;;AACAC,EAAAA,UAAU,CAAC,MAAM;AAEb;AACA,UAAMC,KAAK,GAAGH,SAAS,CAACG,KAAV,EAAd;AACAC,IAAAA,kBAAkB,CAACJ,SAAS,CAACK,KAAV,EAAD,CAAlB,CAJa,CAKb;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACH,GAnBS,EAmBP,GAnBO,CAAV;AAoBH,CAxBD;;KAAMV,O;;AAyBN,MAAMS,kBAAkB,GAAIC,KAAD,IAAW;AAClC,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,MAAMC,GAAX,IAAkBF,KAAlB,EAAyB;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CALD;;AAOA,eAAeZ,OAAf","sourcesContent":["import Chess from \"chess.js\";\n\n/* \n    - Create copy of chess board\n    - get moves\n    - go through each move and get its evaluation\n    - run minmax evaulating each move to a height of 3\n*/\nconst MiniMax = (chess, updateComputerHistory, setRandomBotAvaliableMoves, setFen) => {\n    const chessCopy = new Chess(chess.fen());\n\n    // computer response random\n    setTimeout(() => {\n\n        // Get list of valid moves\n        const moves = chessCopy.moves();\n        getBoardEvaluation(chessCopy.board())\n        // update state for data vizualization\n        // setRandomBotAvaliableMoves(moves);\n\n        // // If valid move is avaliable selects random and updates chessboard\n        // if (moves.length > 0) {\n        //     const computerMove = moves[Math.floor(Math.random() * moves.length)];\n        //     chess.move(computerMove);\n\n        //     // add move to history\n        //     updateComputerHistory(computerMove);\n\n        //     // update chessboard\n        //     setFen(chess.fen());\n        // }\n    }, 300)\n}\nconst getBoardEvaluation = (board) => {\n    let count = 0;\n    for (const arr in board) {\n        console.log(arr)\n    }\n}\n\nexport default MiniMax\n"]},"metadata":{},"sourceType":"module"}