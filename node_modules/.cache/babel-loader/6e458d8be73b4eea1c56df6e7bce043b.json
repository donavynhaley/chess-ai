{"ast":null,"code":"var _jsxFileName = \"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/pages/Game/DataVisualization.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataVisualization = props => {\n  const {\n    selecetedBot,\n    randomBotAvaliableMoves\n  } = props;\n\n  const randomBot = () => {\n    const listAvaliableMoves = randomBotAvaliableMoves.map(move => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: move\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecting random from avaliable moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"avaliable-moves\",\n        children: listAvaliableMoves && listAvaliableMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }; // updates return based on what bot is selected. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-visualization\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DataVisualization;\nexport default DataVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/pages/Game/DataVisualization.js"],"names":["React","DataVisualization","props","selecetedBot","randomBotAvaliableMoves","randomBot","listAvaliableMoves","map","move"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4CF,KAAlD;;AACA,QAAMG,SAAS,GAAG,MAAM;AACpB,UAAMC,kBAAkB,GAAGF,uBAAuB,CAACG,GAAxB,CAA6BC,IAAD,IAAU;AAC7D,0BAAO;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAF0B,CAA3B;AAGA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBACKF,kBAAkB,IAAIA;AAD3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAQH,GAZD,CAFiC,CAgBjC;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;KAAML,iB;AA2BN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\n\nconst DataVisualization = (props) => {\n    const { selecetedBot, randomBotAvaliableMoves } = props;\n    const randomBot = () => {\n        const listAvaliableMoves = randomBotAvaliableMoves.map((move) => {\n            return <li>{move}</li>\n        })\n        return (\n            <>\n                <p>Selecting random from avaliable moves</p>\n                <ul className=\"avaliable-moves\">\n                    {listAvaliableMoves && listAvaliableMoves}\n                </ul>\n            </>\n        )\n    }\n\n    // updates return based on what bot is selected. \n    return (\n        <div className=\"data-visualization\">\n            <h2>Data Visualization</h2>\n\n\n\n        </div>\n    )\n}\n\nexport default DataVisualization\n"]},"metadata":{},"sourceType":"module"}