{"ast":null,"code":"var _jsxFileName = \"/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/pages/Game/DataVisualization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataVisualization = props => {\n  _s();\n\n  const {\n    selecetedBot,\n    randomBotAvaliableMoves,\n    allBots,\n    evalCount\n  } = props;\n  useEffect(() => {\n    console.log(allBots[0] + \" \" + selecetedBot);\n  }, [selecetedBot, allBots]);\n\n  const randomBot = () => {\n    const listAvaliableMoves = randomBotAvaliableMoves.map(move => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: move\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecting random from avaliable moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"avaliable-moves\",\n        children: listAvaliableMoves && listAvaliableMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }; // updates return based on what bot is selected. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), allBots[0] === selecetedBot ? randomBot() : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Postions Evaluated: ${evalCount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: \"See Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataVisualization, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DataVisualization;\nexport default DataVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"sources":["/Users/donavynhaley/Documents/GitHub/chess-ai/chess-ai/src/components/pages/Game/DataVisualization.js"],"names":["React","useEffect","Button","DataVisualization","props","selecetedBot","randomBotAvaliableMoves","allBots","evalCount","console","log","randomBot","listAvaliableMoves","map","move"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,uBAAhB;AAAyCC,IAAAA,OAAzC;AAAkDC,IAAAA;AAAlD,MAAgEJ,KAAtE;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmBF,YAA/B;AACH,GAFQ,EAEN,CAACA,YAAD,EAAeE,OAAf,CAFM,CAAT;;AAGA,QAAMI,SAAS,GAAG,MAAM;AACpB,UAAMC,kBAAkB,GAAGN,uBAAuB,CAACO,GAAxB,CAA6BC,IAAD,IAAU;AAC7D,0BAAO;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAF0B,CAA3B;AAGA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBACKF,kBAAkB,IAAIA;AAD3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAQH,GAZD,CANiC,CAmBjC;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKL,OAAO,CAAC,CAAD,CAAP,KAAeF,YAAf,GAA8BM,SAAS,EAAvC,GAA4C,IAFjD,eAGI;AAAA,gBAAK,uBAAsBH,SAAU;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA9BD;;GAAML,iB;;KAAAA,iB;AAgCN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\n\nconst DataVisualization = (props) => {\n    const { selecetedBot, randomBotAvaliableMoves, allBots, evalCount } = props;\n\n    useEffect(() => {\n        console.log(allBots[0] + \" \" + selecetedBot)\n    }, [selecetedBot, allBots])\n    const randomBot = () => {\n        const listAvaliableMoves = randomBotAvaliableMoves.map((move) => {\n            return <li>{move}</li>\n        })\n        return (\n            <>\n                <p>Selecting random from avaliable moves</p>\n                <ul className=\"avaliable-moves\">\n                    {listAvaliableMoves && listAvaliableMoves}\n                </ul>\n            </>\n        )\n    }\n    // updates return based on what bot is selected. \n    return (\n        <div className=\"data-visualization\">\n            <h2>Data Visualization</h2>\n            {allBots[0] === selecetedBot ? randomBot() : null}\n            <p>{`Postions Evaluated: ${evalCount}`}</p>\n            <Button variant=\"outlined\" color=\"secondary\">\n                See Tree\n            </Button>\n        </div>\n    )\n}\n\nexport default DataVisualization\n"]},"metadata":{},"sourceType":"module"}